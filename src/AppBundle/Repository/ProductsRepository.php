<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ProductsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductsRepository extends \Doctrine\ORM\EntityRepository
{
	const ZERO = 0;
	const PRODUCTSFORHOMEPAGE = 6;

	// public function getProducts() {
	// 	$query = $this->createQueryBuilder('pr')
	// 	    ->select('pr')
	// 	    ->where("pr.quantity > :zero")
	// 	    ->setParameter('zero', self::ZERO)
	// 	    ->orderBy('pr.price', 'ASC');
	// 	$result = $query->getQuery()->getResult();
	// 	return $result;

	// }

	public function getNewestProducts() {
		$query = $this->createQueryBuilder('pr')
		    ->select('pr')
		    ->orderBy('pr.createdAt', 'DESC')
		    ->setMaxResults(self::PRODUCTSFORHOMEPAGE);
		$result = $query->getQuery()->getResult();
		return $result;
	}

	public function getProducts($category, $subcategory, $search) {
		$query = $this->createQueryBuilder('pr')
		    ->select('pr')
		    ->orderBy('pr.id', 'ASC');
		if ($category) {
			$query->join("pr.subcategory", 'sc')
				->join("sc.category", 'ca')
				->andWhere("ca.id = :categoryId")
				->setParameter('categoryId', $category);
		}
		if ($subcategory) {
			$query->join("pr.subcategory", 'sc')
			->andWhere("sc.id = :subcategoryId")
			->setParameter('subcategoryId', $subcategory);
		}
		if ($search) {
			// $query->andWhere("pr.name = :search")
			// 	->setParameter('search', $query->expr()->literal('%'.$search.'%'));
			$query->andWhere($query->expr()->like('pr.name', $query->expr()->literal('%' . $search . '%')));
		}
		return $query->getQuery();
	}
}
